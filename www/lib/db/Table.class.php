<?php

// Generated by Haxe 3.3.0
class db_Table {
	public function __construct(){}
	static function connect() {
		$cnx = sys_db_Mysql::connect(_hx_anonymous(array("host" => "localhost", "port" => 3306, "user" => "root", "pass" => "", "database" => "leaderboard", "socket" => null)));
		sys_db_Manager::set_cnx($cnx);
		sys_db_Manager::initialize();
	}
	static function disconnect() {
		sys_db_Manager::cleanup();
		sys_db_Manager::$cnx->close();
	}
	static function createTable() {
		$tmp = !sys_db_TableCreate::exists(db_GameData::$manager);
		if($tmp) {
			sys_db_TableCreate::create(db_GameData::$manager, null);
		}
		php_Lib::hprint("<h2>Table created</h2>");
	}
	static function convertToHaxeDateTime($s_date) {
		$t_date = null;
		$tmp = $s_date->getFullYear();
		$tmp1 = _hx_string_rec($tmp, "") . "-";
		$tmp2 = $s_date->getMonth();
		$tmp3 = _hx_string_or_null($tmp1) . _hx_string_rec(($tmp2 + 1), "") . "-";
		$tmp4 = $s_date->getDate();
		$tmp5 = _hx_string_or_null($tmp3) . _hx_string_rec($tmp4, "") . " ";
		$tmp6 = $s_date->getHours();
		$tmp7 = _hx_string_or_null($tmp5) . _hx_string_rec($tmp6, "") . ":";
		$tmp8 = $s_date->getMinutes();
		$tmp9 = _hx_string_or_null($tmp7) . _hx_string_rec($tmp8, "") . ":";
		$tmp10 = $s_date->getSeconds();
		$t_date = _hx_string_or_null($tmp9) . _hx_string_rec($tmp10, "");
		return Date::fromString($t_date);
	}
	static function displayLeaderboard() {
		$cnx = sys_db_Mysql::connect(_hx_anonymous(array("host" => "localhost", "port" => 3306, "user" => "root", "pass" => "", "database" => "leaderboard", "socket" => null)));
		$req = $cnx->request("SELECT * FROM gamedata ORDER by scoreDifference DESC LIMIT 10");
		php_Lib::hprint("<body>" . "<table border=1; cellpadding=4; cellspacing=0; style=border-collapse:collapse; bordercolor=f67ffff;>" . "<tr>" . "<th style=background-color:#019e9e><font style=font-family:Verdana; color=white>RANK</font></th>" . "<th style=background-color:#019e9e><font style=font-family:Verdana; color=white>USERNAME</font></th>" . "<th style=background-color:#019e9e><font style=font-family:Verdana; color=white>COUNTRY</font></th>" . "<th style=background-color:#019e9e><font style=font-family:Verdana; color=white>SCORE</font></th>" . "<th style=background-color:#019e9e><font style=font-family:Verdana; color=white>TIMESTAMP</font></th>" . "<th style=background-color:#019e9e><font style=font-family:Verdana; color=white>ID</font></th>");
		$i = 1;
		while(true) {
			$tmp = !$req->hasNext();
			if($tmp) {
				break;
			}
			$row = $req->next();
			$tmp1 = "<tr>" . "<td style=background-color:#006666><font style=font-family:Verdana; color=white>" . _hx_string_rec($i, "") . "</font></td>" . "<td style=background-color:#006666><font style=font-family:Verdana; color=white>" . _hx_string_or_null($row->username) . "</font></td>" . "<td style=background-color:#006666><font style=font-family:Verdana; color=white>" . _hx_string_or_null($row->countryA2) . "</font></td>" . "<td style=background-color:#006666><font style=font-family:Verdana; color=white>" . _hx_string_or_null($row->scoreDifference) . "</font></td>" . "<td style=background-color:#006666><font style=font-family:Verdana; color=white>";
			$tmp2 = db_Table::convertToHaxeDateTime($row->ts);
			$tmp3 = Std::string($tmp2);
			php_Lib::hprint(_hx_string_or_null($tmp1) . _hx_string_or_null($tmp3) . "</font></td>" . "<td style=background-color:#006666><font style=font-family:Verdana; color=white>" . _hx_string_or_null($row->id) . "</font></td>" . "</tr>");
			++$i;
			unset($tmp3,$tmp2,$tmp1,$tmp,$row);
		}
		php_Lib::hprint("</table></body>");
	}
	function __toString() { return 'db.Table'; }
}
