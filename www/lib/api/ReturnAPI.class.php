<?php

// Generated by Haxe 3.3.0
class api_ReturnAPI {
	public function __construct() {}
	static function convertToHaxeDateTime($s_date) {
		$t_date = null;
		$tmp = $s_date->getFullYear();
		$tmp1 = _hx_string_rec($tmp, "") . "-";
		$tmp2 = $s_date->getMonth();
		$tmp3 = _hx_string_or_null($tmp1) . _hx_string_rec(($tmp2 + 1), "") . "-";
		$tmp4 = $s_date->getDate();
		$t_date = _hx_string_or_null($tmp3) . _hx_string_rec($tmp4, "");
		return Date::fromString($t_date);
	}
	static function returnAll() {
		$cnx = sys_db_Mysql::connect(_hx_anonymous(array("host" => "localhost", "port" => 3306, "user" => "andrewco_admin", "pass" => "Ican£tthink", "database" => "andrewco_leaderboard", "socket" => null)));
		$JSON = null;
		$arrayOfRows = new _hx_array(array());
		$data = _hx_anonymous(array("leaderboardData" => $arrayOfRows));
		$req = $cnx->request("SELECT * FROM GameData");
		while(true) {
			$tmp = !$req->hasNext();
			if($tmp) {
				break;
			}
			$row = $req->next();
			$tmp1 = api_ReturnAPI::convertToHaxeDateTime($row->ts);
			$data->leaderboardData->push(_hx_anonymous(array("Username" => $row->username, "Country" => $row->countryA2, "Score" => $row->scoreDifference, "TS" => $tmp1)));
			unset($tmp1,$tmp,$row);
		}
		$JSON = haxe_Json::phpJsonEncode($data, null, null);
		php_Lib::hprint($JSON);
	}
	static function returnTop10() {
		$cnx = sys_db_Mysql::connect(_hx_anonymous(array("host" => "localhost", "port" => 3306, "user" => "andrewco_admin", "pass" => "Ican£tthink", "database" => "andrewco_leaderboard", "socket" => null)));
		$JSON = null;
		$arrayOfRows = new _hx_array(array());
		$data = _hx_anonymous(array("leaderboardData" => $arrayOfRows));
		$req = $cnx->request("SELECT * FROM GameData ORDER by scoreDifference DESC LIMIT 10");
		while(true) {
			$tmp = !$req->hasNext();
			if($tmp) {
				break;
			}
			$row = $req->next();
			$tmp1 = api_ReturnAPI::convertToHaxeDateTime($row->ts);
			$data->leaderboardData->push(_hx_anonymous(array("Username" => $row->username, "Country" => $row->countryA2, "Score" => $row->scoreDifference, "TS" => $tmp1)));
			unset($tmp1,$tmp,$row);
		}
		$JSON = haxe_Json::phpJsonEncode($data, null, null);
		php_Lib::hprint($JSON);
	}
	static function returnCountry($country) {
		$cnx = sys_db_Mysql::connect(_hx_anonymous(array("host" => "localhost", "port" => 3306, "user" => "andrewco_admin", "pass" => "Ican£tthink", "database" => "andrewco_leaderboard", "socket" => null)));
		$JSON = null;
		$arrayOfRows = new _hx_array(array());
		$data = _hx_anonymous(array("leaderboardData" => $arrayOfRows));
		$req = $cnx->request("SELECT * FROM GameData WHERE countryA2='" . _hx_string_or_null($country) . "' ORDER by scoreDifference DESC LIMIT 10");
		while(true) {
			$tmp = !$req->hasNext();
			if($tmp) {
				break;
			}
			$row = $req->next();
			$tmp1 = api_ReturnAPI::convertToHaxeDateTime($row->ts);
			$data->leaderboardData->push(_hx_anonymous(array("Username" => $row->username, "Country" => $row->countryA2, "Score" => $row->scoreDifference, "TS" => $tmp1)));
			unset($tmp1,$tmp,$row);
		}
		$JSON = haxe_Json::phpJsonEncode($data, null, null);
		php_Lib::hprint($JSON);
	}
	static function returnYear($year) {
		$cnx = sys_db_Mysql::connect(_hx_anonymous(array("host" => "localhost", "port" => 3306, "user" => "andrewco_admin", "pass" => "Ican£tthink", "database" => "andrewco_leaderboard", "socket" => null)));
		$JSON = null;
		$arrayOfRows = new _hx_array(array());
		$data = _hx_anonymous(array("leaderboardData" => $arrayOfRows));
		if($year === "now") {
			$tmp = Date::now()->getFullYear();
			$req = $cnx->request("SELECT * FROM GameData WHERE ts LIKE '" . _hx_string_rec($tmp, "") . "-%' ORDER by scoreDifference DESC LIMIT 10");
			while(true) {
				$tmp1 = !$req->hasNext();
				if($tmp1) {
					break;
				}
				$row = $req->next();
				$tmp2 = api_ReturnAPI::convertToHaxeDateTime($row->ts);
				$data->leaderboardData->push(_hx_anonymous(array("Username" => $row->username, "Country" => $row->countryA2, "Score" => $row->scoreDifference, "TS" => $tmp2)));
				unset($tmp2,$tmp1,$row);
			}
		} else {
			$req1 = $cnx->request("SELECT * FROM GameData WHERE ts LIKE '" . _hx_string_or_null($year) . "-%' ORDER by scoreDifference DESC LIMIT 10");
			while(true) {
				$tmp3 = !$req1->hasNext();
				if($tmp3) {
					break;
				}
				$row1 = $req1->next();
				$tmp4 = api_ReturnAPI::convertToHaxeDateTime($row1->ts);
				$data->leaderboardData->push(_hx_anonymous(array("Username" => $row1->username, "Country" => $row1->countryA2, "Score" => $row1->scoreDifference, "TS" => $tmp4)));
				unset($tmp4,$tmp3,$row1);
			}
		}
		$JSON = haxe_Json::phpJsonEncode($data, null, null);
		php_Lib::hprint($JSON);
	}
	static function returnMonth($year, $month) {
		$cnx = sys_db_Mysql::connect(_hx_anonymous(array("host" => "localhost", "port" => 3306, "user" => "andrewco_admin", "pass" => "Ican£tthink", "database" => "andrewco_leaderboard", "socket" => null)));
		$JSON = null;
		$arrayOfRows = new _hx_array(array());
		$data = _hx_anonymous(array("leaderboardData" => $arrayOfRows));
		if($month === "now") {
			$tmp = Date::now()->getMonth();
			if($tmp + 1 < 10) {
				$tmp1 = Date::now()->getFullYear();
				$tmp2 = "SELECT * FROM GameData WHERE ts LIKE '" . _hx_string_rec($tmp1, "") . "-0";
				$tmp3 = Date::now()->getMonth();
				$req = $cnx->request(_hx_string_or_null($tmp2) . _hx_string_rec(($tmp3 + 1), "") . "-%' ORDER by scoreDifference DESC LIMIT 10");
				while(true) {
					$tmp4 = !$req->hasNext();
					if($tmp4) {
						break;
					}
					$row = $req->next();
					$tmp5 = api_ReturnAPI::convertToHaxeDateTime($row->ts);
					$data->leaderboardData->push(_hx_anonymous(array("Username" => $row->username, "Country" => $row->countryA2, "Score" => $row->scoreDifference, "TS" => $tmp5)));
					unset($tmp5,$tmp4,$row);
				}
			} else {
				$tmp6 = Date::now()->getFullYear();
				$tmp7 = "SELECT * FROM GameData WHERE ts LIKE '" . _hx_string_rec($tmp6, "") . "-";
				$tmp8 = Date::now()->getMonth();
				$req1 = $cnx->request(_hx_string_or_null($tmp7) . _hx_string_rec(($tmp8 + 1), "") . "-%' ORDER by scoreDifference DESC LIMIT 10");
				while(true) {
					$tmp9 = !$req1->hasNext();
					if($tmp9) {
						break;
					}
					$row1 = $req1->next();
					$tmp10 = api_ReturnAPI::convertToHaxeDateTime($row1->ts);
					$data->leaderboardData->push(_hx_anonymous(array("Username" => $row1->username, "Country" => $row1->countryA2, "Score" => $row1->scoreDifference, "TS" => $tmp10)));
					unset($tmp9,$tmp10,$row1);
				}
			}
		} else {
			if($month < 10) {
				$req2 = $cnx->request("SELECT * FROM GameData WHERE ts LIKE '" . _hx_string_or_null($year) . "-0" . _hx_string_or_null($month) . "-%' ORDER by scoreDifference DESC LIMIT 10");
				while(true) {
					$tmp11 = !$req2->hasNext();
					if($tmp11) {
						break;
					}
					$row2 = $req2->next();
					$tmp12 = api_ReturnAPI::convertToHaxeDateTime($row2->ts);
					$data->leaderboardData->push(_hx_anonymous(array("Username" => $row2->username, "Country" => $row2->countryA2, "Score" => $row2->scoreDifference, "TS" => $tmp12)));
					unset($tmp12,$tmp11,$row2);
				}
			} else {
				$req3 = $cnx->request("SELECT * FROM GameData WHERE ts LIKE '" . _hx_string_or_null($year) . "-" . _hx_string_or_null($month) . "-%' ORDER by scoreDifference DESC LIMIT 10");
				while(true) {
					$tmp13 = !$req3->hasNext();
					if($tmp13) {
						break;
					}
					$row3 = $req3->next();
					$tmp14 = api_ReturnAPI::convertToHaxeDateTime($row3->ts);
					$data->leaderboardData->push(_hx_anonymous(array("Username" => $row3->username, "Country" => $row3->countryA2, "Score" => $row3->scoreDifference, "TS" => $tmp14)));
					unset($tmp14,$tmp13,$row3);
				}
			}
		}
		$JSON = haxe_Json::phpJsonEncode($data, null, null);
		php_Lib::hprint($JSON);
	}
	static function returnWeek() {
		$cnx = sys_db_Mysql::connect(_hx_anonymous(array("host" => "localhost", "port" => 3306, "user" => "andrewco_admin", "pass" => "Ican£tthink", "database" => "andrewco_leaderboard", "socket" => null)));
		$JSON = null;
		$arrayOfRows = new _hx_array(array());
		$data = _hx_anonymous(array("leaderboardData" => $arrayOfRows));
		$tmp = Date::now()->getTime();
		$tmp1 = Date::fromTime($tmp - 604800000)->toString();
		$tmp2 = "SELECT * FROM GameData WHERE ts BETWEEN '" . _hx_string_or_null($tmp1) . "' AND '";
		$tmp3 = Date::now()->toString();
		$req = $cnx->request(_hx_string_or_null($tmp2) . _hx_string_or_null($tmp3) . "' ORDER by scoreDifference DESC LIMIT 10");
		while(true) {
			$tmp4 = !$req->hasNext();
			if($tmp4) {
				break;
			}
			$row = $req->next();
			$tmp5 = api_ReturnAPI::convertToHaxeDateTime($row->ts);
			$data->leaderboardData->push(_hx_anonymous(array("Username" => $row->username, "Country" => $row->countryA2, "Score" => $row->scoreDifference, "TS" => $tmp5)));
			unset($tmp5,$tmp4,$row);
		}
		$JSON = haxe_Json::phpJsonEncode($data, null, null);
		php_Lib::hprint($JSON);
	}
	static function returnDay($year, $month, $day) {
		$cnx = sys_db_Mysql::connect(_hx_anonymous(array("host" => "localhost", "port" => 3306, "user" => "andrewco_admin", "pass" => "Ican£tthink", "database" => "andrewco_leaderboard", "socket" => null)));
		$JSON = null;
		$arrayOfRows = new _hx_array(array());
		$data = _hx_anonymous(array("leaderboardData" => $arrayOfRows));
		if($day === "now") {
			$tmp = Date::now()->getMonth();
			if($tmp + 1 < 10) {
				$tmp1 = Date::now()->getDate();
				if($tmp1 < 10) {
					$tmp2 = Date::now()->getFullYear();
					$tmp3 = "SELECT * FROM GameData WHERE ts LIKE '" . _hx_string_rec($tmp2, "") . "-0";
					$tmp4 = Date::now()->getMonth();
					$tmp5 = _hx_string_or_null($tmp3) . _hx_string_rec(($tmp4 + 1), "") . "-0";
					$tmp6 = Date::now()->getDate();
					$req = $cnx->request(_hx_string_or_null($tmp5) . _hx_string_rec($tmp6, "") . "%' ORDER by scoreDifference DESC LIMIT 10");
					while(true) {
						$tmp7 = !$req->hasNext();
						if($tmp7) {
							break;
						}
						$row = $req->next();
						$tmp8 = api_ReturnAPI::convertToHaxeDateTime($row->ts);
						$data->leaderboardData->push(_hx_anonymous(array("Username" => $row->username, "Country" => $row->countryA2, "Score" => $row->scoreDifference, "TS" => $tmp8)));
						unset($tmp8,$tmp7,$row);
					}
				} else {
					$tmp9 = Date::now()->getFullYear();
					$tmp10 = "SELECT * FROM GameData WHERE ts LIKE '" . _hx_string_rec($tmp9, "") . "-0";
					$tmp11 = Date::now()->getMonth();
					$tmp12 = _hx_string_or_null($tmp10) . _hx_string_rec(($tmp11 + 1), "") . "-";
					$tmp13 = Date::now()->getDate();
					$req1 = $cnx->request(_hx_string_or_null($tmp12) . _hx_string_rec($tmp13, "") . "%' ORDER by scoreDifference DESC LIMIT 10");
					while(true) {
						$tmp14 = !$req1->hasNext();
						if($tmp14) {
							break;
						}
						$row1 = $req1->next();
						$tmp15 = api_ReturnAPI::convertToHaxeDateTime($row1->ts);
						$data->leaderboardData->push(_hx_anonymous(array("Username" => $row1->username, "Country" => $row1->countryA2, "Score" => $row1->scoreDifference, "TS" => $tmp15)));
						unset($tmp15,$tmp14,$row1);
					}
				}
			} else {
				$tmp16 = Date::now()->getDate();
				if($tmp16 < 10) {
					$tmp17 = Date::now()->getFullYear();
					$tmp18 = "SELECT * FROM GameData WHERE ts LIKE '" . _hx_string_rec($tmp17, "") . "-";
					$tmp19 = Date::now()->getMonth();
					$tmp20 = _hx_string_or_null($tmp18) . _hx_string_rec(($tmp19 + 1), "") . "-0";
					$tmp21 = Date::now()->getDate();
					$req2 = $cnx->request(_hx_string_or_null($tmp20) . _hx_string_rec($tmp21, "") . "%' ORDER by scoreDifference DESC LIMIT 10");
					while(true) {
						$tmp22 = !$req2->hasNext();
						if($tmp22) {
							break;
						}
						$row2 = $req2->next();
						$tmp23 = api_ReturnAPI::convertToHaxeDateTime($row2->ts);
						$data->leaderboardData->push(_hx_anonymous(array("Username" => $row2->username, "Country" => $row2->countryA2, "Score" => $row2->scoreDifference, "TS" => $tmp23)));
						unset($tmp23,$tmp22,$row2);
					}
				} else {
					$tmp24 = Date::now()->getFullYear();
					$tmp25 = "SELECT * FROM GameData WHERE ts LIKE '" . _hx_string_rec($tmp24, "") . "-";
					$tmp26 = Date::now()->getMonth();
					$tmp27 = _hx_string_or_null($tmp25) . _hx_string_rec(($tmp26 + 1), "") . "-";
					$tmp28 = Date::now()->getDate();
					$req3 = $cnx->request(_hx_string_or_null($tmp27) . _hx_string_rec($tmp28, "") . "%' ORDER by scoreDifference DESC LIMIT 10");
					while(true) {
						$tmp29 = !$req3->hasNext();
						if($tmp29) {
							break;
						}
						$row3 = $req3->next();
						$tmp30 = api_ReturnAPI::convertToHaxeDateTime($row3->ts);
						$data->leaderboardData->push(_hx_anonymous(array("Username" => $row3->username, "Country" => $row3->countryA2, "Score" => $row3->scoreDifference, "TS" => $tmp30)));
						unset($tmp30,$tmp29,$row3);
					}
				}
			}
		} else {
			if($month < 10) {
				if($day < 10) {
					$req4 = $cnx->request("SELECT * FROM GameData WHERE ts LIKE '" . _hx_string_or_null($year) . "-0" . _hx_string_or_null($month) . "-0" . _hx_string_or_null($day) . "%' ORDER by scoreDifference DESC LIMIT 10");
					while(true) {
						$tmp31 = !$req4->hasNext();
						if($tmp31) {
							break;
						}
						$row4 = $req4->next();
						$tmp32 = api_ReturnAPI::convertToHaxeDateTime($row4->ts);
						$data->leaderboardData->push(_hx_anonymous(array("Username" => $row4->username, "Country" => $row4->countryA2, "Score" => $row4->scoreDifference, "TS" => $tmp32)));
						unset($tmp32,$tmp31,$row4);
					}
				} else {
					$req5 = $cnx->request("SELECT * FROM GameData WHERE ts LIKE '" . _hx_string_or_null($year) . "-0" . _hx_string_or_null($month) . "-" . _hx_string_or_null($day) . "%' ORDER by scoreDifference DESC LIMIT 10");
					while(true) {
						$tmp33 = !$req5->hasNext();
						if($tmp33) {
							break;
						}
						$row5 = $req5->next();
						$tmp34 = api_ReturnAPI::convertToHaxeDateTime($row5->ts);
						$data->leaderboardData->push(_hx_anonymous(array("Username" => $row5->username, "Country" => $row5->countryA2, "Score" => $row5->scoreDifference, "TS" => $tmp34)));
						unset($tmp34,$tmp33,$row5);
					}
				}
			} else {
				if($day < 10) {
					$req6 = $cnx->request("SELECT * FROM GameData WHERE ts LIKE '" . _hx_string_or_null($year) . "-" . _hx_string_or_null($month) . "-0" . _hx_string_or_null($day) . "%' ORDER by scoreDifference DESC LIMIT 10");
					while(true) {
						$tmp35 = !$req6->hasNext();
						if($tmp35) {
							break;
						}
						$row6 = $req6->next();
						$tmp36 = api_ReturnAPI::convertToHaxeDateTime($row6->ts);
						$data->leaderboardData->push(_hx_anonymous(array("Username" => $row6->username, "Country" => $row6->countryA2, "Score" => $row6->scoreDifference, "TS" => $tmp36)));
						unset($tmp36,$tmp35,$row6);
					}
				} else {
					$req7 = $cnx->request("SELECT * FROM GameData WHERE ts LIKE '" . _hx_string_or_null($year) . "-" . _hx_string_or_null($month) . "-" . _hx_string_or_null($day) . "%' ORDER by scoreDifference DESC LIMIT 10");
					while(true) {
						$tmp37 = !$req7->hasNext();
						if($tmp37) {
							break;
						}
						$row7 = $req7->next();
						$tmp38 = api_ReturnAPI::convertToHaxeDateTime($row7->ts);
						$data->leaderboardData->push(_hx_anonymous(array("Username" => $row7->username, "Country" => $row7->countryA2, "Score" => $row7->scoreDifference, "TS" => $tmp38)));
						unset($tmp38,$tmp37,$row7);
					}
				}
			}
		}
		$JSON = haxe_Json::phpJsonEncode($data, null, null);
		php_Lib::hprint($JSON);
	}
	static function returnUsername($username) {
		$cnx = sys_db_Mysql::connect(_hx_anonymous(array("host" => "localhost", "port" => 3306, "user" => "andrewco_admin", "pass" => "Ican£tthink", "database" => "andrewco_leaderboard", "socket" => null)));
		$JSON = null;
		$arrayOfRows = new _hx_array(array());
		$data = _hx_anonymous(array("leaderboardData" => $arrayOfRows));
		$req = $cnx->request("SELECT * FROM GameData WHERE Username='" . _hx_string_or_null($username) . "' ORDER by scoreDifference DESC LIMIT 10");
		while(true) {
			$tmp = !$req->hasNext();
			if($tmp) {
				break;
			}
			$row = $req->next();
			$tmp1 = api_ReturnAPI::convertToHaxeDateTime($row->ts);
			$data->leaderboardData->push(_hx_anonymous(array("Username" => $row->username, "Country" => $row->countryA2, "Score" => $row->scoreDifference, "TS" => $tmp1)));
			unset($tmp1,$tmp,$row);
		}
		$JSON = haxe_Json::phpJsonEncode($data, null, null);
		php_Lib::hprint($JSON);
	}
	function __toString() { return 'api.ReturnAPI'; }
}
